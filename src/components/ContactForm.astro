---
import { getLangFromUrl, useTranslations } from "../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<form id="contact-form" class="mx-6 lg:mx-0">
    <div class="relative z-0 w-full mb-5 group">
        <input
            type="text"
            name="input_name"
            id="input_name"
            class="block py-2.5 px-0 w-full text-sm text-secondary bg-transparent border-0 border-b-2 border-secondary/50 appearance-none focus:outline-none focus:ring-0 peer"
            placeholder=""
            required
            aria-labelledby="label_name"
        />
        <label
            id="label_name"
            for="input_name"
            class="peer-focus:font-medium absolute text-sm text-primary duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
        >
            {t("contact.form.name")}
        </label>
    </div>

    <div class="relative z-0 w-full mb-5 group">
        <input
            type="email"
            name="input_email"
            class="block py-2.5 px-0 w-full text-sm text-secondary bg-transparent border-0 border-b-2 border-secondary/50 appearance-none focus:outline-none focus:ring-0 peer"
            placeholder=""
            required
            aria-label="label_email"
        />
        <label
            id="label_email"
            for="input_email"
            class="peer-focus:font-medium absolute text-sm text-primary duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6"
        >
            {t("contact.form.email")}
        </label>
    </div>
    <div class="relative z-0 w-full mb-5 group">
        <textarea
            name="input_text"
            id="input_text"
            rows="5"
            class="block py-2.5 px-0 w-full text-sm text-secondary bg-transparent border-0 border-b-2 border-secondary/50 appearance-none focus:outline-none focus:ring-0 peer"
            placeholder=""
            required
            area-labeledby="label_message"></textarea>
        <label
            id="label_message"
            for="input_text"
            class="peer-focus:font-medium absolute text-sm text-primary
            duration-300 transform -translate-y-6 scale-75 top-3 -z-10
            origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4
            peer-placeholder-shown:scale-100
            peer-placeholder-shown:translate-y-0 peer-focus:scale-75
            peer-focus:-translate-y-6"
        >
            {t("contact.form.message")}
        </label>
    </div>

    <label class="importantfield" for="second-name"></label>
    <input
        class="importantfield"
        autocomplete="off"
        type="text"
        id="second-name"
        name="second-name"
        placeholder=""
    />
    <label class="importantfield" for="phone-number"></label>
    <input
        class="importantfield"
        autocomplete="off"
        type="text"
        id="phone-number"
        name="phone-number"
        placeholder=""
    />
    <button
        type="submit"
        class="text-secondary bg-primary/55
            hover:bg-primary/75 focus:outline-none font-medium
            rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center"
    >
        <span class="font-medium">Enviar</span>
    </button>

    <span class="ml-3 w-full font-extrabold text-primary">
        <span id="form-messages"></span>
    </span>
</form>

<script is:inline>
    const form = document.querySelector("#contact-form");

    form.addEventListener("submit", async (e) => {
        e.preventDefault();

        const formData = new FormData(form);
        const response = await fetch("/sendEmail.php", {
            method: "POST",
            body: formData,
        });

        const result = await response.json();

        if (response.ok) {
            document.getElementById("form-messages").innerHTML = result.success;
            form.reset();
        } else {
            document.getElementById("form-messages").innerHTML = result.error;
        }
    });
</script>
